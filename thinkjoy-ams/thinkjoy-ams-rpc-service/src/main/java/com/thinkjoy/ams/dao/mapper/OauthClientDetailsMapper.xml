<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkjoy.ams.dao.mapper.OauthClientDetailsMapper">
  <resultMap id="BaseResultMap" type="com.thinkjoy.ams.dao.model.OauthClientDetails">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="client_id" jdbcType="VARCHAR" property="clientId" />
    <result column="client_secret" jdbcType="VARCHAR" property="clientSecret" />
    <result column="client_name" jdbcType="VARCHAR" property="clientName" />
    <result column="scope" jdbcType="VARCHAR" property="scope" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="app_id" jdbcType="INTEGER" property="appId" />
    <result column="resource_ids" jdbcType="VARCHAR" property="resourceIds" />
    <result column="grant_types" jdbcType="VARCHAR" property="grantTypes" />
    <result column="redirect_uri" jdbcType="VARCHAR" property="redirectUri" />
    <result column="authorities" jdbcType="VARCHAR" property="authorities" />
    <result column="access_token_validity" jdbcType="INTEGER" property="accessTokenValidity" />
    <result column="refresh_token_validity" jdbcType="INTEGER" property="refreshTokenValidity" />
    <result column="trusted" jdbcType="VARCHAR" property="trusted" />
    <result column="is_muti_login" jdbcType="VARCHAR" property="isMutiLogin" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="ctime" jdbcType="BIGINT" property="ctime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="VARCHAR" property="status" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, client_id, client_secret, client_name, scope, role_id, app_id, resource_ids, 
    grant_types, redirect_uri, authorities, access_token_validity, refresh_token_validity, 
    trusted, is_muti_login, creator, ctime, description, status
  </sql>
  <select id="selectByExample" parameterType="com.thinkjoy.ams.dao.model.OauthClientDetailsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from oauth_client_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from oauth_client_details
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from oauth_client_details
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.thinkjoy.ams.dao.model.OauthClientDetailsExample">
    delete from oauth_client_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.thinkjoy.ams.dao.model.OauthClientDetails">
    insert into oauth_client_details (id, client_id, client_secret, 
      client_name, scope, role_id, 
      app_id, resource_ids, grant_types, 
      redirect_uri, authorities, access_token_validity, 
      refresh_token_validity, trusted, is_muti_login, 
      creator, ctime, description, 
      status)
    values (#{id,jdbcType=INTEGER}, #{clientId,jdbcType=VARCHAR}, #{clientSecret,jdbcType=VARCHAR}, 
      #{clientName,jdbcType=VARCHAR}, #{scope,jdbcType=VARCHAR}, #{roleId,jdbcType=INTEGER}, 
      #{appId,jdbcType=INTEGER}, #{resourceIds,jdbcType=VARCHAR}, #{grantTypes,jdbcType=VARCHAR}, 
      #{redirectUri,jdbcType=VARCHAR}, #{authorities,jdbcType=VARCHAR}, #{accessTokenValidity,jdbcType=INTEGER}, 
      #{refreshTokenValidity,jdbcType=INTEGER}, #{trusted,jdbcType=VARCHAR}, #{isMutiLogin,jdbcType=VARCHAR}, 
      #{creator,jdbcType=VARCHAR}, #{ctime,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.thinkjoy.ams.dao.model.OauthClientDetails">
    insert into oauth_client_details
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="clientId != null">
        client_id,
      </if>
      <if test="clientSecret != null">
        client_secret,
      </if>
      <if test="clientName != null">
        client_name,
      </if>
      <if test="scope != null">
        scope,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="resourceIds != null">
        resource_ids,
      </if>
      <if test="grantTypes != null">
        grant_types,
      </if>
      <if test="redirectUri != null">
        redirect_uri,
      </if>
      <if test="authorities != null">
        authorities,
      </if>
      <if test="accessTokenValidity != null">
        access_token_validity,
      </if>
      <if test="refreshTokenValidity != null">
        refresh_token_validity,
      </if>
      <if test="trusted != null">
        trusted,
      </if>
      <if test="isMutiLogin != null">
        is_muti_login,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="clientId != null">
        #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="clientSecret != null">
        #{clientSecret,jdbcType=VARCHAR},
      </if>
      <if test="clientName != null">
        #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="scope != null">
        #{scope,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="resourceIds != null">
        #{resourceIds,jdbcType=VARCHAR},
      </if>
      <if test="grantTypes != null">
        #{grantTypes,jdbcType=VARCHAR},
      </if>
      <if test="redirectUri != null">
        #{redirectUri,jdbcType=VARCHAR},
      </if>
      <if test="authorities != null">
        #{authorities,jdbcType=VARCHAR},
      </if>
      <if test="accessTokenValidity != null">
        #{accessTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="refreshTokenValidity != null">
        #{refreshTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="trusted != null">
        #{trusted,jdbcType=VARCHAR},
      </if>
      <if test="isMutiLogin != null">
        #{isMutiLogin,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.thinkjoy.ams.dao.model.OauthClientDetailsExample" resultType="java.lang.Long">
    select count(*) from oauth_client_details
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update oauth_client_details
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.clientId != null">
        client_id = #{record.clientId,jdbcType=VARCHAR},
      </if>
      <if test="record.clientSecret != null">
        client_secret = #{record.clientSecret,jdbcType=VARCHAR},
      </if>
      <if test="record.clientName != null">
        client_name = #{record.clientName,jdbcType=VARCHAR},
      </if>
      <if test="record.scope != null">
        scope = #{record.scope,jdbcType=VARCHAR},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=INTEGER},
      </if>
      <if test="record.resourceIds != null">
        resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
      </if>
      <if test="record.grantTypes != null">
        grant_types = #{record.grantTypes,jdbcType=VARCHAR},
      </if>
      <if test="record.redirectUri != null">
        redirect_uri = #{record.redirectUri,jdbcType=VARCHAR},
      </if>
      <if test="record.authorities != null">
        authorities = #{record.authorities,jdbcType=VARCHAR},
      </if>
      <if test="record.accessTokenValidity != null">
        access_token_validity = #{record.accessTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="record.refreshTokenValidity != null">
        refresh_token_validity = #{record.refreshTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="record.trusted != null">
        trusted = #{record.trusted,jdbcType=VARCHAR},
      </if>
      <if test="record.isMutiLogin != null">
        is_muti_login = #{record.isMutiLogin,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=BIGINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update oauth_client_details
    set id = #{record.id,jdbcType=INTEGER},
      client_id = #{record.clientId,jdbcType=VARCHAR},
      client_secret = #{record.clientSecret,jdbcType=VARCHAR},
      client_name = #{record.clientName,jdbcType=VARCHAR},
      scope = #{record.scope,jdbcType=VARCHAR},
      role_id = #{record.roleId,jdbcType=INTEGER},
      app_id = #{record.appId,jdbcType=INTEGER},
      resource_ids = #{record.resourceIds,jdbcType=VARCHAR},
      grant_types = #{record.grantTypes,jdbcType=VARCHAR},
      redirect_uri = #{record.redirectUri,jdbcType=VARCHAR},
      authorities = #{record.authorities,jdbcType=VARCHAR},
      access_token_validity = #{record.accessTokenValidity,jdbcType=INTEGER},
      refresh_token_validity = #{record.refreshTokenValidity,jdbcType=INTEGER},
      trusted = #{record.trusted,jdbcType=VARCHAR},
      is_muti_login = #{record.isMutiLogin,jdbcType=VARCHAR},
      creator = #{record.creator,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=BIGINT},
      description = #{record.description,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.thinkjoy.ams.dao.model.OauthClientDetails">
    update oauth_client_details
    <set>
      <if test="clientId != null">
        client_id = #{clientId,jdbcType=VARCHAR},
      </if>
      <if test="clientSecret != null">
        client_secret = #{clientSecret,jdbcType=VARCHAR},
      </if>
      <if test="clientName != null">
        client_name = #{clientName,jdbcType=VARCHAR},
      </if>
      <if test="scope != null">
        scope = #{scope,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="appId != null">
        app_id = #{appId,jdbcType=INTEGER},
      </if>
      <if test="resourceIds != null">
        resource_ids = #{resourceIds,jdbcType=VARCHAR},
      </if>
      <if test="grantTypes != null">
        grant_types = #{grantTypes,jdbcType=VARCHAR},
      </if>
      <if test="redirectUri != null">
        redirect_uri = #{redirectUri,jdbcType=VARCHAR},
      </if>
      <if test="authorities != null">
        authorities = #{authorities,jdbcType=VARCHAR},
      </if>
      <if test="accessTokenValidity != null">
        access_token_validity = #{accessTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="refreshTokenValidity != null">
        refresh_token_validity = #{refreshTokenValidity,jdbcType=INTEGER},
      </if>
      <if test="trusted != null">
        trusted = #{trusted,jdbcType=VARCHAR},
      </if>
      <if test="isMutiLogin != null">
        is_muti_login = #{isMutiLogin,jdbcType=VARCHAR},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.thinkjoy.ams.dao.model.OauthClientDetails">
    update oauth_client_details
    set client_id = #{clientId,jdbcType=VARCHAR},
      client_secret = #{clientSecret,jdbcType=VARCHAR},
      client_name = #{clientName,jdbcType=VARCHAR},
      scope = #{scope,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      app_id = #{appId,jdbcType=INTEGER},
      resource_ids = #{resourceIds,jdbcType=VARCHAR},
      grant_types = #{grantTypes,jdbcType=VARCHAR},
      redirect_uri = #{redirectUri,jdbcType=VARCHAR},
      authorities = #{authorities,jdbcType=VARCHAR},
      access_token_validity = #{accessTokenValidity,jdbcType=INTEGER},
      refresh_token_validity = #{refreshTokenValidity,jdbcType=INTEGER},
      trusted = #{trusted,jdbcType=VARCHAR},
      is_muti_login = #{isMutiLogin,jdbcType=VARCHAR},
      creator = #{creator,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>