<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkjoy.ams.dao.mapper.AmsApproleMapper">
  <resultMap id="BaseResultMap" type="com.thinkjoy.ams.dao.model.AmsApprole">
    <id column="approle_id" jdbcType="INTEGER" property="approleId" />
    <result column="approle_name" jdbcType="VARCHAR" property="approleName" />
    <result column="relation_name" jdbcType="VARCHAR" property="relationName" />
    <result column="relation_code" jdbcType="VARCHAR" property="relationCode" />
    <result column="usertype_id" jdbcType="INTEGER" property="usertypeId" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="ctime" jdbcType="BIGINT" property="ctime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="orders" jdbcType="BIGINT" property="orders" />
    <result column="per_personalization" jdbcType="VARCHAR" property="perPersonalization" />
    <result column="app_id" jdbcType="INTEGER" property="appId" />
    <result column="app_name" jdbcType="VARCHAR" property="appName" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    approle_id, approle_name, relation_name, relation_code, usertype_id, creator, ctime, 
    description, status, orders, per_personalization, app_id, app_name
  </sql>
  <select id="selectByExample" parameterType="com.thinkjoy.ams.dao.model.AmsApproleExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ams_approle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from ams_approle
    where approle_id = #{approleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from ams_approle
    where approle_id = #{approleId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.thinkjoy.ams.dao.model.AmsApproleExample">
    delete from ams_approle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.thinkjoy.ams.dao.model.AmsApprole">
    insert into ams_approle (approle_id, approle_name, relation_name, 
      relation_code, usertype_id, creator, 
      ctime, description, status, 
      orders, per_personalization, app_id, 
      app_name)
    values (#{approleId,jdbcType=INTEGER}, #{approleName,jdbcType=VARCHAR}, #{relationName,jdbcType=VARCHAR}, 
      #{relationCode,jdbcType=VARCHAR}, #{usertypeId,jdbcType=INTEGER}, #{creator,jdbcType=VARCHAR}, 
      #{ctime,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, 
      #{orders,jdbcType=BIGINT}, #{perPersonalization,jdbcType=VARCHAR}, #{appId,jdbcType=INTEGER}, 
      #{appName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.thinkjoy.ams.dao.model.AmsApprole">
    insert into ams_approle
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="approleId != null">
        approle_id,
      </if>
      <if test="approleName != null">
        approle_name,
      </if>
      <if test="relationName != null">
        relation_name,
      </if>
      <if test="relationCode != null">
        relation_code,
      </if>
      <if test="usertypeId != null">
        usertype_id,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="orders != null">
        orders,
      </if>
      <if test="perPersonalization != null">
        per_personalization,
      </if>
      <if test="appId != null">
        app_id,
      </if>
      <if test="appName != null">
        app_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="approleId != null">
        #{approleId,jdbcType=INTEGER},
      </if>
      <if test="approleName != null">
        #{approleName,jdbcType=VARCHAR},
      </if>
      <if test="relationName != null">
        #{relationName,jdbcType=VARCHAR},
      </if>
      <if test="relationCode != null">
        #{relationCode,jdbcType=VARCHAR},
      </if>
      <if test="usertypeId != null">
        #{usertypeId,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="orders != null">
        #{orders,jdbcType=BIGINT},
      </if>
      <if test="perPersonalization != null">
        #{perPersonalization,jdbcType=VARCHAR},
      </if>
      <if test="appId != null">
        #{appId,jdbcType=INTEGER},
      </if>
      <if test="appName != null">
        #{appName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.thinkjoy.ams.dao.model.AmsApproleExample" resultType="java.lang.Long">
    select count(*) from ams_approle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update ams_approle
    <set>
      <if test="record.approleId != null">
        approle_id = #{record.approleId,jdbcType=INTEGER},
      </if>
      <if test="record.approleName != null">
        approle_name = #{record.approleName,jdbcType=VARCHAR},
      </if>
      <if test="record.relationName != null">
        relation_name = #{record.relationName,jdbcType=VARCHAR},
      </if>
      <if test="record.relationCode != null">
        relation_code = #{record.relationCode,jdbcType=VARCHAR},
      </if>
      <if test="record.usertypeId != null">
        usertype_id = #{record.usertypeId,jdbcType=INTEGER},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=BIGINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.orders != null">
        orders = #{record.orders,jdbcType=BIGINT},
      </if>
      <if test="record.perPersonalization != null">
        per_personalization = #{record.perPersonalization,jdbcType=VARCHAR},
      </if>
      <if test="record.appId != null">
        app_id = #{record.appId,jdbcType=INTEGER},
      </if>
      <if test="record.appName != null">
        app_name = #{record.appName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update ams_approle
    set approle_id = #{record.approleId,jdbcType=INTEGER},
      approle_name = #{record.approleName,jdbcType=VARCHAR},
      relation_name = #{record.relationName,jdbcType=VARCHAR},
      relation_code = #{record.relationCode,jdbcType=VARCHAR},
      usertype_id = #{record.usertypeId,jdbcType=INTEGER},
      creator = #{record.creator,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=BIGINT},
      description = #{record.description,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      orders = #{record.orders,jdbcType=BIGINT},
      per_personalization = #{record.perPersonalization,jdbcType=VARCHAR},
      app_id = #{record.appId,jdbcType=INTEGER},
      app_name = #{record.appName,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.thinkjoy.ams.dao.model.AmsApprole">
    update ams_approle
    <set>
      <if test="approleName != null">
        approle_name = #{approleName,jdbcType=VARCHAR},
      </if>
      <if test="relationName != null">
        relation_name = #{relationName,jdbcType=VARCHAR},
      </if>
      <if test="relationCode != null">
        relation_code = #{relationCode,jdbcType=VARCHAR},
      </if>
      <if test="usertypeId != null">
        usertype_id = #{usertypeId,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="orders != null">
        orders = #{orders,jdbcType=BIGINT},
      </if>
      <if test="perPersonalization != null">
        per_personalization = #{perPersonalization,jdbcType=VARCHAR},
      </if>
      /*这里不对这两个字段作检测,因为这两个字段可以为空,当编辑的时候可以取消*/
        app_id = #{appId,jdbcType=INTEGER},
        app_name = #{appName,jdbcType=VARCHAR},
    </set>
    where approle_id = #{approleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.thinkjoy.ams.dao.model.AmsApprole">
    update ams_approle
    set approle_name = #{approleName,jdbcType=VARCHAR},
      relation_name = #{relationName,jdbcType=VARCHAR},
      relation_code = #{relationCode,jdbcType=VARCHAR},
      usertype_id = #{usertypeId,jdbcType=INTEGER},
      creator = #{creator,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      orders = #{orders,jdbcType=BIGINT},
      per_personalization = #{perPersonalization,jdbcType=VARCHAR},
      app_id = #{appId,jdbcType=INTEGER},
      app_name = #{appName,jdbcType=VARCHAR}
    where approle_id = #{approleId,jdbcType=INTEGER}
  </update>

  <delete id="deleteById" parameterType="java.lang.String">
    DELETE ams_approle,ams_approle_permission,ams_user_approle
    FROM ams_approle

    LEFT JOIN ams_approle_permission ON ams_approle.approle_id = ams_approle_permission.approle_id
    LEFT JOIN ams_user_approle ON ams_approle.approle_id = ams_user_approle.approle_id

    WHERE ams_approle.approle_id = #{id}
  </delete>

  <select id="getAmsAppIdByRoleCode" parameterType="java.lang.String" resultType="java.lang.Integer">
    SELECT apa.app_id FROM ams_project_schoolagency aps
    LEFT JOIN ams_project_app apa ON aps.project_id = apa.project_id
    LEFT JOIN ams_app aa ON apa.app_id = aa.app_id
    WHERE aps.relation_code = #{code}
      AND aa.applicable_identity LIKE CONCAT('%','${userTypeId}','%' )
      AND aa.is_personalization = #{perPer}
  </select>

  <select id="getAppRolesByIdentity" parameterType="map" resultMap="BaseResultMap">
    SELECT aa.* from ams_user_approle aua
    left JOIN ams_approle aa ON aua.approle_id = aa.approle_id
    WHERE aua.user_id = #{userId}
    AND aua.usertype_id = #{userType}
    AND aua.relation_code = #{relationCode}
    AND aa.status=1
  </select>

  <update id="updatePerpersonal" parameterType="java.util.Map">
    UPDATE ucenter_user_identity
    set per_personalization = #{perPersonalization,jdbcType=VARCHAR}
    where user_id = #{userId,jdbcType=INTEGER}
    and usertype_id = #{usertypeId,jdbcType=INTEGER}
    and relation_code = #{relationCode,jdbcType=VARCHAR}
  </update>

  <select id="getAmsApproleByIdentityAndAppId" parameterType="java.util.Map" resultMap="BaseResultMap">
    SELECT aa.approle_id, aa.approle_name FROM ams_approle aa
    LEFT JOIN ams_user_approle aua
    ON aa.approle_id = aua.approle_id
    WHERE aa.app_id = #{appId}
      and aua.user_id = #{userId}
      and aua.usertype_id = #{usertypeId}
      and aua.relation_code = #{relationCode}
      and aa.status = 1
  </select>

  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>