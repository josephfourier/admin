<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkjoy.enrollment.dao.mapper.EnrollChargedetailMapper">
  <resultMap id="BaseResultMap" type="com.thinkjoy.enrollment.dao.model.EnrollChargedetail">
    <id column="detail_id" jdbcType="INTEGER" property="detailId" />
    <result column="detail_name" jdbcType="VARCHAR" property="detailName" />
    <result column="item_id" jdbcType="INTEGER" property="itemId" />
    <result column="item_name" jdbcType="VARCHAR" property="itemName" />
    <result column="money" jdbcType="DOUBLE" property="money" />
    <result column="is_must" jdbcType="BIT" property="isMust" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="ctime" jdbcType="BIGINT" property="ctime" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="school_code" jdbcType="VARCHAR" property="schoolCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    detail_id, detail_name, item_id, item_name, money, is_must, creator, ctime, description, 
    status, year, school_code
  </sql>
  <select id="selectByExample" parameterType="com.thinkjoy.enrollment.dao.model.EnrollChargedetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enroll_chargedetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from enroll_chargedetail
    where detail_id = #{detailId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enroll_chargedetail
    where detail_id = #{detailId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.thinkjoy.enrollment.dao.model.EnrollChargedetailExample">
    delete from enroll_chargedetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.thinkjoy.enrollment.dao.model.EnrollChargedetail">
    insert into enroll_chargedetail (detail_id, detail_name, item_id, 
      item_name, money, is_must, 
      creator, ctime, description, 
      status, year, school_code
      )
    values (#{detailId,jdbcType=INTEGER}, #{detailName,jdbcType=VARCHAR}, #{itemId,jdbcType=INTEGER}, 
      #{itemName,jdbcType=VARCHAR}, #{money,jdbcType=DOUBLE}, #{isMust,jdbcType=BIT}, 
      #{creator,jdbcType=VARCHAR}, #{ctime,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, 
      #{status,jdbcType=VARCHAR}, #{year,jdbcType=INTEGER}, #{schoolCode,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="detailId" parameterType="com.thinkjoy.enrollment.dao.model.EnrollChargedetail">
    insert into enroll_chargedetail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="detailId != null">
        detail_id,
      </if>
      <if test="detailName != null">
        detail_name,
      </if>
      <if test="itemId != null">
        item_id,
      </if>
      <if test="itemName != null">
        item_name,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="isMust != null">
        is_must,
      </if>
      <if test="creator != null">
        creator,
      </if>
      <if test="ctime != null">
        ctime,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="schoolCode != null">
        school_code,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="detailId != null">
        #{detailId,jdbcType=INTEGER},
      </if>
      <if test="detailName != null">
        #{detailName,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null">
        #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        #{money,jdbcType=DOUBLE},
      </if>
      <if test="isMust != null">
        #{isMust,jdbcType=BIT},
      </if>
      <if test="creator != null">
        #{creator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        #{ctime,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="schoolCode != null">
        #{schoolCode,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.thinkjoy.enrollment.dao.model.EnrollChargedetailExample" resultType="java.lang.Long">
    select count(*) from enroll_chargedetail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enroll_chargedetail
    <set>
      <if test="record.detailId != null">
        detail_id = #{record.detailId,jdbcType=INTEGER},
      </if>
      <if test="record.detailName != null">
        detail_name = #{record.detailName,jdbcType=VARCHAR},
      </if>
      <if test="record.itemId != null">
        item_id = #{record.itemId,jdbcType=INTEGER},
      </if>
      <if test="record.itemName != null">
        item_name = #{record.itemName,jdbcType=VARCHAR},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DOUBLE},
      </if>
      <if test="record.isMust != null">
        is_must = #{record.isMust,jdbcType=BIT},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.ctime != null">
        ctime = #{record.ctime,jdbcType=BIGINT},
      </if>
      <if test="record.description != null">
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.schoolCode != null">
        school_code = #{record.schoolCode,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enroll_chargedetail
    set detail_id = #{record.detailId,jdbcType=INTEGER},
      detail_name = #{record.detailName,jdbcType=VARCHAR},
      item_id = #{record.itemId,jdbcType=INTEGER},
      item_name = #{record.itemName,jdbcType=VARCHAR},
      money = #{record.money,jdbcType=DOUBLE},
      is_must = #{record.isMust,jdbcType=BIT},
      creator = #{record.creator,jdbcType=VARCHAR},
      ctime = #{record.ctime,jdbcType=BIGINT},
      description = #{record.description,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=VARCHAR},
      year = #{record.year,jdbcType=INTEGER},
      school_code = #{record.schoolCode,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.thinkjoy.enrollment.dao.model.EnrollChargedetail">
    update enroll_chargedetail
    <set>
      <if test="detailName != null">
        detail_name = #{detailName,jdbcType=VARCHAR},
      </if>
      <if test="itemId != null">
        item_id = #{itemId,jdbcType=INTEGER},
      </if>
      <if test="itemName != null">
        item_name = #{itemName,jdbcType=VARCHAR},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DOUBLE},
      </if>
      <if test="isMust != null">
        is_must = #{isMust,jdbcType=BIT},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="ctime != null">
        ctime = #{ctime,jdbcType=BIGINT},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="schoolCode != null">
        school_code = #{schoolCode,jdbcType=VARCHAR},
      </if>
    </set>
    where detail_id = #{detailId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.thinkjoy.enrollment.dao.model.EnrollChargedetail">
    update enroll_chargedetail
    set detail_name = #{detailName,jdbcType=VARCHAR},
      item_id = #{itemId,jdbcType=INTEGER},
      item_name = #{itemName,jdbcType=VARCHAR},
      money = #{money,jdbcType=DOUBLE},
      is_must = #{isMust,jdbcType=BIT},
      creator = #{creator,jdbcType=VARCHAR},
      ctime = #{ctime,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      status = #{status,jdbcType=VARCHAR},
      year = #{year,jdbcType=INTEGER},
      school_code = #{schoolCode,jdbcType=VARCHAR}
    where detail_id = #{detailId,jdbcType=INTEGER}
  </update>

  <select id="getChargeDetailPriceAndSpecialtyInfo" parameterType="java.util.Map" resultType="com.thinkjoy.enrollment.dao.model.enrollDto.SpecialtyInfoDto">

    SELECT
      us.specialty_code as specialtyCode,
      us.specialty_name as specialtyName,
      us.trdr_name as trdrName,
      us.specialty_type as specialtyType,
      us.faculty_name as facultyName,
      us.school_system as schoolSystem,
      us.specialty_nature as specialtyNature,
      us.enrollment_target as enrollmentTarget,
      sum(ec.money) as price

      from ucenter_specialty us
      LEFT JOIN enroll_chargedetail_specialty ecs on us.specialty_code = ecs.specialty_code
      LEFT JOIN enroll_chargedetail ec on ecs.detail_id = ec.detail_id
    WHERE us.year = #{year} AND us.school_code = #{schoolCode}  GROUP BY us.specialty_code

  </select>

  <cache type="org.mybatis.caches.ehcache.LoggingEhcache" />
</mapper>